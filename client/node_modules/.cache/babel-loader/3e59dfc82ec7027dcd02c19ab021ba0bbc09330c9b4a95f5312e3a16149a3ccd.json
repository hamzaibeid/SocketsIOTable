{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaobaid/Desktop/socketApp/client/src/App.js\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3456\");\nfunction App() {\n  var _s = $RefreshSig$();\n  const ExcelLikeTable = () => {\n    _s();\n    const [rows, setRows] = useState(['']); // Initial state with an empty row\n\n    const handleAddRow = () => {\n      setRows(prevRows => [...prevRows, '']); // Add an empty row to the rows state\n    };\n\n    const handleCellValueChange = (event, rowIndex) => {\n      const updatedRows = [...rows];\n      updatedRows[rowIndex] = event.target.value;\n      setRows(updatedRows);\n      socket.emit('cellValueChange', {\n        rowIndex,\n        value: event.target.value\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Header 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Header 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row,\n                onChange: event => handleCellValueChange(event, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRow,\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  };\n  _s(ExcelLikeTable, \"g59+Jwner7YySdWOhSytSJEfBS0=\");\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","jsxDEV","_jsxDEV","socket","connect","App","_s","$RefreshSig$","ExcelLikeTable","rows","setRows","handleAddRow","prevRows","handleCellValueChange","event","rowIndex","updatedRows","target","value","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/hamzaobaid/Desktop/socketApp/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:3456\");\n\nfunction App() {\n\nconst ExcelLikeTable = () => {\n  const [rows, setRows] = useState(['']); // Initial state with an empty row\n\n  const handleAddRow = () => {\n    setRows(prevRows => [...prevRows, '']); // Add an empty row to the rows state\n  };\n\n  const handleCellValueChange = (event, rowIndex) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex] = event.target.value;\n    setRows(updatedRows);\n    socket.emit('cellValueChange', { rowIndex, value: event.target.value });\n  };\n  \n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Header 1</th>\n            <th>Header 2</th>\n            {/* Add more header cells here */}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, index) => (\n            <tr key={index}>\n              <td>\n                <input\n                  type=\"text\"\n                  value={row}\n                  onChange={event => handleCellValueChange(event, index)}\n                />\n              </td>\n              {/* Add more cells here */}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleAddRow}>Add Row</button>\n    </div>\n  );\n};\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGL,EAAE,CAACM,OAAO,CAAC,uBAAuB,CAAC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEf,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAAAF,EAAA;IAC3B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAExC,MAAMW,YAAY,GAAGA,CAAA,KAAM;MACzBD,OAAO,CAACE,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;;IAED,MAAMC,qBAAqB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MACjD,MAAMC,WAAW,GAAG,CAAC,GAAGP,IAAI,CAAC;MAC7BO,WAAW,CAACD,QAAQ,CAAC,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK;MAC1CR,OAAO,CAACM,WAAW,CAAC;MACpBb,MAAM,CAACgB,IAAI,CAAC,iBAAiB,EAAE;QAAEJ,QAAQ;QAAEG,KAAK,EAAEJ,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IACzE,CAAC;IAGD,oBACEhB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,eACElB,OAAA;YAAAkB,QAAA,gBACElB,OAAA;cAAAkB,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBtB,OAAA;cAAAkB,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRtB,OAAA;UAAAkB,QAAA,EACGX,IAAI,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBzB,OAAA;YAAAkB,QAAA,eACElB,OAAA;cAAAkB,QAAA,eACElB,OAAA;gBACE0B,IAAI,EAAC,MAAM;gBACXV,KAAK,EAAEQ,GAAI;gBACXG,QAAQ,EAAEf,KAAK,IAAID,qBAAqB,CAACC,KAAK,EAAEa,KAAK;cAAE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC,GAPEG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACRtB,OAAA;QAAQ4B,OAAO,EAAEnB,YAAa;QAAAS,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV,CAAC;EAAClB,EAAA,CA3CIE,cAAc;AA4CpB;AAACuB,EAAA,GA9CQ1B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}