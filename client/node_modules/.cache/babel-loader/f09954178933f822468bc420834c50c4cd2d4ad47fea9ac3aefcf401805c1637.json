{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaobaid/Desktop/socketApp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3456'); // Replace with your server URL\n\nconst ExcelLikeTable = () => {\n  _s();\n  const [headers] = useState(['Header 1', 'Header 2', 'Header 3', 'Header 4', 'Header 5', 'Header 6', 'Header 7', 'Header 8', 'Header 9', 'Header 10', 'Header 11', 'Header 12', 'Header 13', 'Header 14', 'Header 15']);\n  const [rows, setRows] = useState([]);\n  const handleAddRow = () => {\n    setRows(prevRows => [...prevRows, Array(headers.length).fill('')]);\n  };\n  const handleDeleteRow = rowIndex => {\n    setRows(prevRows => prevRows.filter((row, index) => index !== rowIndex));\n    socket.emit('deleteRow', rowIndex);\n  };\n  const handleCellValueChange = (event, rowIndex, cellIndex) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex][cellIndex] = event.target.value;\n    setRows(updatedRows);\n    socket.emit('cellValueChange', {\n      rowIndex,\n      cellIndex,\n      value: event.target.value\n    });\n  };\n  const handleSave = () => {\n    socket.emit('saveData', {\n      rows\n    });\n  };\n  useEffect(() => {\n    socket.on('cellValueChange', _ref => {\n      let {\n        rowIndex,\n        cellIndex,\n        value\n      } = _ref;\n      const updatedRows = [...rows];\n      updatedRows[rowIndex][cellIndex] = value;\n      setRows(updatedRows);\n    });\n    socket.on('connect', () => {\n      socket.emit('initialState', rows);\n    });\n    socket.on('addRow', newRow => {\n      setRows(prevRows => [...prevRows, newRow]);\n    });\n    socket.on('deleteRow', rowIndex => {\n      setRows(prevRows => prevRows.filter((row, index) => index !== rowIndex));\n    });\n    return () => {\n      socket.off('cellValueChange');\n      socket.off('connect');\n      socket.off('addRow');\n      socket.off('deleteRow');\n    };\n  }, [rows]);\n  useEffect(() => {\n    socket.on('initialState', initialState => {\n      setRows(initialState.length > 0 ? initialState : [Array(headers.length).fill('')]);\n    });\n    if (rows.length === 0) {\n      setRows([Array(headers.length).fill('')]);\n    }\n    return () => {\n      socket.off('initialState');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: cell,\n              onChange: event => handleCellValueChange(event, rowIndex, cellIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteRow(rowIndex),\n              children: \"Delete Row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelLikeTable, \"QKHYIbun6Gg3ZWs9LFL7UIr7rfs=\");\n_c = ExcelLikeTable;\nexport default ExcelLikeTable;\nvar _c;\n$RefreshReg$(_c, \"ExcelLikeTable\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","ExcelLikeTable","_s","headers","rows","setRows","handleAddRow","prevRows","Array","length","fill","handleDeleteRow","rowIndex","filter","row","index","emit","handleCellValueChange","event","cellIndex","updatedRows","target","value","handleSave","on","_ref","newRow","off","initialState","children","map","header","fileName","_jsxFileName","lineNumber","columnNumber","cell","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/hamzaobaid/Desktop/socketApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3456'); // Replace with your server URL\n\nconst ExcelLikeTable = () => {\n  const [headers] = useState([\n    'Header 1', 'Header 2', 'Header 3',\n    'Header 4', 'Header 5', 'Header 6',\n    'Header 7', 'Header 8', 'Header 9',\n    'Header 10', 'Header 11', 'Header 12',\n    'Header 13', 'Header 14', 'Header 15'\n  ]);\n  const [rows, setRows] = useState([]);\n\n  const handleAddRow = () => {\n    setRows(prevRows => [...prevRows, Array(headers.length).fill('')]);\n  };\n\n  const handleDeleteRow = rowIndex => {\n    setRows(prevRows => prevRows.filter((row, index) => index !== rowIndex));\n    socket.emit('deleteRow', rowIndex);\n  };\n\n  const handleCellValueChange = (event, rowIndex, cellIndex) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex][cellIndex] = event.target.value;\n    setRows(updatedRows);\n    socket.emit('cellValueChange', { rowIndex, cellIndex, value: event.target.value });\n  };\n\n  const handleSave = () => {\n    socket.emit('saveData', { rows });\n  };\n\n  useEffect(() => {\n    socket.on('cellValueChange', ({ rowIndex, cellIndex, value }) => {\n      const updatedRows = [...rows];\n      updatedRows[rowIndex][cellIndex] = value;\n      setRows(updatedRows);\n    });\n    socket.on('connect', () => {\n      socket.emit('initialState', rows);\n    });\n    socket.on('addRow', newRow => {\n      setRows(prevRows => [...prevRows, newRow]);\n    });\n    socket.on('deleteRow', rowIndex => {\n      setRows(prevRows => prevRows.filter((row, index) => index !== rowIndex));\n    });\n    return () => {\n      socket.off('cellValueChange');\n      socket.off('connect');\n      socket.off('addRow');\n      socket.off('deleteRow');\n    };\n  }, [rows]);\n\n  useEffect(() => {\n    socket.on('initialState', initialState => {\n      setRows(initialState.length > 0 ? initialState : [Array(headers.length).fill('')]);\n    });\n    if (rows.length === 0) {\n      setRows([Array(headers.length).fill('')]);\n    }\n    return () => {\n      socket.off('initialState');\n    };\n  }, []);\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            {headers.map((header, index) => (\n              <th key={index}>{header}</th>\n            ))}\n            <th></th> {/* Empty cell for Delete Row button */}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, cellIndex) => (\n                <td key={cellIndex}>\n                  <input\n                    type=\"text\"\n                    value={cell}\n                    onChange={event => handleCellValueChange(event, rowIndex, cellIndex)}\n                  />\n                </td>\n              ))}\n              <td>\n                <button onClick={() => handleDeleteRow(rowIndex)}>Delete Row</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleAddRow}>Add Row</button>\n      <button onClick={handleSave}>Save</button>\n    </div>\n  );\n};\n\nexport default ExcelLikeTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}