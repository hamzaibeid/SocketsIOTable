{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaobaid/Desktop/socketApp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3456\");\nconst ExcelLikeTable = () => {\n  _s();\n  const [rows, setRows] = useState(['']);\n  const handleAddRow = () => {\n    setRows(prevRows => [...prevRows, '']);\n  };\n  const handleCellValueChange = (event, rowIndex) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex] = event.target.value;\n    setRows(updatedRows);\n    socket.emit('cellValueChange', {\n      rowIndex,\n      value: event.target.value\n    });\n  };\n  useEffect(() => {\n    socket.on('cellValueChange', _ref => {\n      let {\n        rowIndex,\n        value\n      } = _ref;\n      const updatedRows = [...rows];\n      updatedRows[rowIndex] = value;\n      setRows(updatedRows);\n    });\n    socket.on('connect', () => {\n      socket.emit('initialState', rows);\n    });\n    return () => {\n      socket.off('cellValueChange');\n      socket.off('connect');\n    };\n  }, [rows]);\n  useEffect(() => {\n    socket.on('initialState', initialState => {\n      setRows(initialState);\n    });\n    return () => {\n      socket.off('initialState');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Header 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Header 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row,\n              onChange: event => handleCellValueChange(event, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelLikeTable, \"uTsv3vnbRdBdk0O41rcwJCz6AAs=\");\n_c = ExcelLikeTable;\nexport default ExcelLikeTable;\nvar _c;\n$RefreshReg$(_c, \"ExcelLikeTable\");","map":{"version":3,"names":["io","useEffect","useState","jsxDEV","_jsxDEV","socket","connect","ExcelLikeTable","_s","rows","setRows","handleAddRow","prevRows","handleCellValueChange","event","rowIndex","updatedRows","target","value","emit","on","_ref","off","initialState","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/hamzaobaid/Desktop/socketApp/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:3456\");\n\nconst ExcelLikeTable = () => {\n  const [rows, setRows] = useState(['']);\n\n  const handleAddRow = () => {\n    setRows(prevRows => [...prevRows, '']);\n  };\n\n  const handleCellValueChange = (event, rowIndex) => {\n    const updatedRows = [...rows];\n    updatedRows[rowIndex] = event.target.value;\n    setRows(updatedRows);\n    socket.emit('cellValueChange', { rowIndex, value: event.target.value });\n  };\n\n  useEffect(() => {\n    socket.on('cellValueChange', ({ rowIndex, value }) => {\n      const updatedRows = [...rows];\n      updatedRows[rowIndex] = value;\n      setRows(updatedRows);\n    });\n    socket.on('connect', () => {\n      socket.emit('initialState', rows);\n    });\n    return () => {\n      socket.off('cellValueChange');\n      socket.off('connect');\n    };\n  }, [rows]);\n\n  useEffect(() => {\n    socket.on('initialState', initialState => {\n      setRows(initialState);\n    });\n    return () => {\n      socket.off('initialState');\n    };\n  }, []);\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Header 1</th>\n            <th>Header 2</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, index) => (\n            <tr key={index}>\n              <td>\n                <input\n                  type=\"text\"\n                  value={row}\n                  onChange={event => handleCellValueChange(event, index)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleAddRow}>Add Row</button>\n    </div>\n  );\n};\n\nexport default ExcelLikeTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}